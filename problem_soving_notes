#1. twosum
#indices #map #complement
#2,7,11,15 target9
#1.brute force---easiest way, but takes too long, loop through each elements twice
class Solution:
    def twoSum(self, nums, target):
        for i in range(len(nums)):
            for j in range(i + 1, len(nums)):
                if nums[j] == target - nums[i]:
                    return [i, j]
                    print([i, j])
#one way hash table
class Solution:
    def twoSum(self, nums, target: int):
        hashmap = {}
        for i in range(len(nums)): #iterating
            complement = target - nums[i]
            if complement in hashmap:
                return[hashmap[complement], i]
            else:
                hashmap[nums[i]] = i #assigning to the dict and iterate from the second indices
#two way hash table
class Solution:
    def twoSum(self, nums, target: int):
        hashmap = {}
        for i in range(len(nums)):
            hashmap[nums[i]] = i #assign i into dictionary
        for i in range(len(nums)):
            complement = target - nums[i]
            if complement in hashmap and hashmap[complement] != i: #check if complement inside the dictionary if not and not equal to i then output its indices
                return [i, hashmap[complement]]
##################################################################################################################################################################
#1920. Build Array from Permutation
#Given a zero-based permutation nums (0-indexed), build an array ans of the same length where ans[i] = nums[nums[i]] for each 0 <= i < nums.length and return it.
#A zero-based permutation nums is an array of distinct integers from 0 to nums.length - 1 (inclusive).
class Solution:
    def buildArray(self, nums: List[int]) -> List[int]:
        ans = [0 for i in range(len(nums))] #zero
        for i in range(len(nums)):
            ans[i] = nums[nums[i]]
        return ans
####################################################################################################################################################################
#167. Two Sum II - Input Array Is Sorted
